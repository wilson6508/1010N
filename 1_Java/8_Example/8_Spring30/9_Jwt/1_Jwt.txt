https://medium.com/%E4%BC%81%E9%B5%9D%E4%B9%9F%E6%87%82%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/jwt-json-web-token-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%B4%B9-74abfafad7ba

JWT 是JSON Web Token的簡寫基於 JSON object 的編碼
並透過這個編碼傳遞資訊

1. 前端會先透過存取後端的登入API，後端驗證使用者帳密成功後，就會發放合法JWT字串
2. 前端拿到JWT字串就會將JWT存放在Local Storage裡面
3. 當前端要存取受保護的資源API時，只要在Header的填寫以下內容：Authorization: Bearer <JWT token>
4. 使用者帶著JWT向資源伺服器請求資源 > 如果這個JWT是有效的 > 那麼就能獲取資源

JWT的組合可以看成是三個JSON object，並且用.來做區隔
而這三個部分會各自進行編碼 組成一個JWT字串(xxxxx.yyyyy.zzzzz)
---------------------------------------------------------------------------------
Header
    由兩個欄位組合:
    alg: token被加密的演算法 如HMAC、SHA256、RSA
    typ: token的type 基本上就是JWT
    {
        "alg": "HS256",
        "typ": "JWT"
    }
    然後進行Base64編碼(Base64是透過64個字符來表示二進制數據的一種方法)
    編碼的方式是固定的而且是可以逆向解碼的
    並不是安全的加密演算法

Payload
    這裡放的是聲明(Claim)內容，也就是用來放傳遞訊息的地方，在定義上有三種聲明:
    Registered claims:
        iss(Issuer): JWT簽發者
        iat(Issued At): JWT簽發時間
        exp(Expiration Time): JWT的過期時間，過期時間必須大於簽發JWT時間
        sub(Subject): JWT所面向的用戶
        aud(Audience): 接收JWT的一方
        nbf(Not Before): 也就是定義擬發放JWT之後，的某段時間點前該JWT仍舊是不可用的
        jti(JWT Id): JWT的身分標示，每個JWT的Id都應該是不重複的，避免重複發放
    Public claims:
        可以想成是傳遞的欄位必須是跟上面Registered claims欄位不能衝突，然後可以向官方申請定義公開聲明，會進行審核等步驟，實務上在開發上是不太會用這部分的
    Private claims
        這個就是發放JWT伺服器可以自定義的欄位的部分，例如實務上會放User Account、User Name、User Role等不敏感的數據。

Signature
    由三大部分組成：
    base64UrlEncode(header)
    base64UrlEncode(payload)
    secret

    HMACSHA256
    (
        base64UrlEncode(header) + "." +
        base64UrlEncode(payload),
        secret
    )

最後將Header、Payload、Signature三者用.串聯在一起，就是一個合法簽發的JWT字串。
---------------------------------------------------------------------------------