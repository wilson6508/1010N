package test01;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;
import java.util.function.Predicate;

public class Ex7 {

    public static void main(String[] args) {
        List<Person> list = new ArrayList<>();
        list.add(new Person(-2, 777.77));
        list.add(new Person(88, 555.55));
        list.add(new Person(88, 222.11));
        list.stream().filter(distinctByKey(Person::getAge)).forEach(System.out::println);
    }

    public static <T> Predicate<T> distinctByKey(Function<? super T, ?> keyExtractor) {
        Set<Object> seen = ConcurrentHashMap.newKeySet();
        return t -> seen.add(keyExtractor.apply(t));
    }
}

class Person {
    private Integer age;
    private Double salary;

    public Person(Integer age, Double salary) {
        this.age = age;
        this.salary = salary;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public Double getSalary() {
        return salary;
    }

    public void setSalary(Double salary) {
        this.salary = salary;
    }

    @Override
    public String toString() {
        return "Person{" +
                "age=" + age +
                ", salary=" + salary +
                '}';
    }
}
