import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface JsonObject {}
-----------------------------------------------------------------------------
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.FIELD)
public @interface PositiveNumber {}
-----------------------------------------------------------------------------
import com.annotation.JsonObject;
import com.annotation.PositiveNumber;
import lombok.AllArgsConstructor;
import lombok.Data;

@Data
@JsonObject
@AllArgsConstructor
public class Person {
    private String name;
    @PositiveNumber
    private Integer age;
}
-----------------------------------------------------------------------------
public void getValidatedPersonAsJson(Object object) {
    Class<?> clazz = object.getClass();
    if (!clazz.isAnnotationPresent(JsonObject.class)) {
        log.info("class is {}", clazz.getName());
    }
    for (Field field : clazz.getDeclaredFields()) {
        if (field.isAnnotationPresent(PositiveNumber.class)) {
            log.info("class is {}", field.getName());
        }
    }
}
-----------------------------------------------------------------------------